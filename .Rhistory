format(Sys.time(), '%d %B, %Y')
download.file("https://www.ime.usp.br/~pam/dados.RData", "dados.RData")
load("dados.RData")
download.file("https://www.ime.usp.br/~pam/dados.RData", "dados.RData")
load("dados.RData")
names(tab2_1)
summary(tab2_1$salario)
download.file("https://www.ime.usp.br/~pam/dados.RData", "dados.RData")
load("dados.RData")
names(tab2_1)
summary(tab2_1$salario)
ni<-table(tab2_1$grau_instrucao) # Calcula a tabela de frequências absolutas e armazena o resultado em 'mytab'
fi<-prop.table(ni) # Tabela de frequências relativas (f_i)
p_fi<-100*prop.table(ni) # Porcentagem (100 f_i)
# Adiciona linhas de total
ni<-c(ni,sum(ni))
fi<-c(fi,sum(fi))
p_fi<-c(p_fi,sum(p_fi))
names(ni)[4]<-"Total"
tab2_2<-cbind(ni,fi=round(fi,digits=2),p_fi=round(p_fi,digits=2))
tab2_2
#download.file("https://www.ime.usp.br/~pam/dados.RData", "dados.RData")
#load("dados.RData")
tab2_1<-read.table("tabela2_1.csv", dec=",", sep=";",h=T)
names(tab2_1)
summary(tab2_1$salario)
ni<-table(tab2_1$grau_instrucao) # Calcula a tabela de frequências absolutas e armazena o resultado em 'mytab'
fi<-prop.table(ni) # Tabela de frequências relativas (f_i)
p_fi<-100*prop.table(ni) # Porcentagem (100 f_i)
# Adiciona linhas de total
ni<-c(ni,sum(ni))
fi<-c(fi,sum(fi))
p_fi<-c(p_fi,sum(p_fi))
names(ni)[4]<-"Total"
tab2_2<-cbind(ni,fi=round(fi,digits=2),p_fi=round(p_fi,digits=2))
tab2_2
#download.file("https://www.ime.usp.br/~pam/dados.RData", "dados.RData")
#load("dados.RData")
tab2_1<-read.table("tabela2_1.csv", dec=",", sep=";",h=T)
names(tab2_1)
summary(tab2_1$salario)
ni<-table(tab2_1$grau_instrucao) # Calcula a tabela de frequências absolutas e armazena o resultado em 'mytab'
fi<-prop.table(ni) # Tabela de frequências relativas (f_i)
p_fi<-100*prop.table(ni) # Porcentagem (100 f_i)
# Adiciona linhas de total
ni<-c(ni,sum(ni))
fi<-c(fi,sum(fi))
p_fi<-c(p_fi,sum(p_fi))
names(ni)[4]<-"Total"
tab2_2<-cbind(ni,fi=round(fi,digits=2),p_fi=round(p_fi,digits=2))
tab2_2
# Calcula a tabela de frequências absolutas e armazena o resultado em 'ni'
ni<-table(tab2_1$grau_instrucao)
fi<-prop.table(ni) # Tabela de frequências relativas (f_i)
p_fi<-100*prop.table(ni) # Porcentagem (100 f_i)
# Adiciona linhas de total
ni<-c(ni,sum(ni))
fi<-c(fi,sum(fi))
p_fi<-c(p_fi,sum(p_fi))
names(ni)[4]<-"Total"
tab2_2<-cbind(ni,fi=round(fi,digits=2),p_fi=round(p_fi,digits=2))
tab2_2
#download.file("https://www.ime.usp.br/~pam/dados.RData", "dados.RData")
#load("dados.RData")
tab2_1<-read.table("tabela2_1.csv", dec=",", sep=";",h=T)
names(tab2_1)
summary(tab2_1$salario)
table(tab2_1$grau_instrucao)
table(tab2_1$grau_instrucao,tab2_1$salario)
table(tab2_1$grau_instrucao,tab2_1$estado_civil)
table(tab2_1$grau_instrucao)
table(tab2_1$grau_instrucao,tab2_1$estado_civil)
#Grau de instrução
table(tab2_1$grau_instrucao)
#Grau de instrução x Estado Civil
table(tab2_1$grau_instrucao,tab2_1$estado_civil)
table(tab2_1$estado_civil, tab2_1$n_filhos)
#Grau de instrução
table(tab2_1$grau_instrucao)
#Grau de instrução x Estado Civil
table(tab2_1$grau_instrucao,tab2_1$estado_civil)
table(tab2_1$grau_instrucao, tab2_1$n_filhos)
#Grau de instrução
table(tab2_1$grau_instrucao)
#Grau de instrução x Estado Civil
table(tab2_1$grau_instrucao,tab2_1$estado_civil)
table(tab2_1$n_filhos, tab2_1$grau_instrucao)
#Grau de instrução x Estado Civil
prop.table(table(tab2_1$grau_instrucao,tab2_1$estado_civil) )
# Grau de instrução x Estado Civil
prop.table(table(tab2_1$grau_instrucao,tab2_1$estado_civil))
# Com duas casas decimais
round(prop.table(table(tab2_1$grau_instrucao,tab2_1$estado_civil)),2)
summary(tab2_1$salario)
# Medidas de resumo dos salários
summary(tab2_1$salario)
mean(tab2_1$salario)
mean(tab2_1$salario, 2)
mean(tab2_1$salario)
mean(tab2_1$idade_anos)
# Média dos salários
mean(tab2_1$salario)
# Média de idade
mean(tab2_1$idade_anos)
# Mediana dos salários
median(tab2_1$salario)
# Mediana dos salários
median(tab2_1$salario)
# Mediana de idade
median(tab2_1$idade_anos)
# Mediana dos salários
median(tab2_1$salario)
# Mediana de idade
Print('A mediana de idade é:')
# Mediana dos salários
median(tab2_1$salario)
# Mediana de idade
cat('A mediana de idade é:')
median(tab2_1$idade_anos)
# Mediana dos salários
cat('A mediana de salário é:')
median(tab2_1$salario)
# Mediana de idade
cat('A mediana de idade é:')
median(tab2_1$idade_anos)
# Mediana dos salários
cat('A mediana de salário é:', median(tab2_1$salario))
# Mediana de idade
cat('A mediana de idade é:')
median(tab2_1$idade_anos)
# Mediana dos salários
cat('A mediana de salário é:', median(tab2_1$salario)\n)
# Mediana dos salários
cat('A mediana de salário é:', median(tab2_1$salario)/n)
# Mediana dos salários
cat('A mediana de salário é:', median(tab2_1$salario),/n)
# Mediana dos salários
cat('A mediana de salário é:', median(tab2_1$salario),'\n')
# Mediana de idade
cat('A mediana de idade é:')
median(tab2_1$idade_anos)
# Mediana dos salários
cat('A mediana de salário é:', median(tab2_1$salario),'\n')
# Mediana de idade
cat('A mediana de idade é:', median(tab2_1$idade_anos, '\n'
# Mediana dos salários
cat('A mediana de salário é:', median(tab2_1$salario),'\n')
# Mediana de idade
cat('A mediana de idade é:', median(tab2_1$idade_anos), '\n'
# Mediana dos salários
cat('A mediana de salário é:', median(tab2_1$salario),'\n')
# Mediana de idade
cat('A mediana de idade é:', median(tab2_1$idade_anos), '\n')
# Média dos salários
cat('A média de salário é:', mean(tab2_1$salario), '\n')
# Média de idade
mean(tab2_1$idade_anos)
# Média dos salários
cat('A média de salário é:', mean(tab2_1$salario), '\n')
# Média de idade
cat('A mediana de idade é:', mean(tab2_1$idade_anos), '\n')
# Média dos salários
cat('A média de salário é:', mean(tab2_1$salario), '\n')
# Média de idade
cat('A média de idade é:', mean(tab2_1$idade_anos), '\n')
# Variância dos salários
cat('A variância de salário é:', var(tab2_1$salario),'\n')
# Medidas de resumo dos salários
summary(tab2_1$salario)
#
summary(tab2_1$salario[tab2_1$estado_civil=="Casado"])
# Medidas de resumo dos salários
summary(tab2_1$salario)
#
summary(tab2_1$salario[tab2_1$estado_civil=="casado"])
# Medidas de resumo dos salários
summary(tab2_1$salario)
#
Cat("sumário de salários apenas do casados")
# Medidas de resumo dos salários
summary(tab2_1$salario)
#
Cat('sumário de salários apenas do casados')
# Medidas de resumo dos salários
summary(tab2_1$salario)
#
print('sumário de salários apenas do casados')
summary(tab2_1$salario[tab2_1$estado_civil=="casado"])
# Medidas de resumo dos salários
summary(tab2_1$salario)
#
print('sumário de salários apenas do casados'\n)
# Medidas de resumo dos salários
summary(tab2_1$salario)
#
print('sumário de salários apenas do casados','\n')
# Medidas de resumo dos salários
summary(tab2_1$salario)
#
print('sumário de salários apenas do casados')
summary(tab2_1$salario[tab2_1$estado_civil=="casado"])
# Medidas de resumo dos salários
print('sumário de salários')
summary(tab2_1$salario)
#
print('sumário de salários apenas do casados')
summary(tab2_1$salario[tab2_1$estado_civil=="casado"])
# Medidas de resumo dos salários
print('sumário de salários')
summary(tab2_1$salario)
summary(tab2_1$salario[tab2_1$estado_civil=="casado"])
summary(tab2_1$salario)
summary(tab2_1$salario[tab2_1$estado_civil=="casado"])
cat('A variância de salário é:', sd(tab2_1$salario),'\n')
cat('O desvio-padrão dos salários é:', sd(tab2_1$salario),'\n')
sd(tab2_1$n_filhos)
sd(tab2_1$n_filhos, na.rm=TRUE
sd(tab2_1$n_filhos, na.rm=TRUE)
#download.file("https://www.ime.usp.br/~pam/dados.RData", "dados.RData")
#load("dados.RData")
tab2_1<-read.table("tabela2_1.csv", dec=",", sep=";",h=T)
names(tab2_1)
summary(tab2_1$salario)
# Calcula a tabela de frequências absolutas e armazena o resultado em 'ni'
ni<-table(tab2_1$grau_instrucao)
fi<-prop.table(ni) # Tabela de frequências relativas (f_i)
p_fi<-100*prop.table(ni) # Porcentagem (100 f_i)
# Adiciona linhas de total
ni<-c(ni,sum(ni))
fi<-c(fi,sum(fi))
p_fi<-c(p_fi,sum(p_fi))
names(ni)[4]<-"Total"
tab2_2<-cbind(ni,fi=round(fi,digits=2),p_fi=round(p_fi,digits=2))
tab2_2
#Grau de instrução
table(tab2_1$grau_instrucao)
#Grau de instrução x Estado Civil
table(tab2_1$grau_instrucao,tab2_1$estado_civil)
table(tab2_1$n_filhos, tab2_1$grau_instrucao)
cat('O desvio-padrão dos salários é:', sd(tab2_1$salario),'\n')
sd(tab2_1$n_filhos)
sd(tab2_1$n_filhos, na.rm=TRUE)
amostra1 = c(14.9,13.4,14.5,13.5,15.0,13.9,14.9,16.4,14.6,15.4)
t.test(amostra1,mu=15)
amostra1 = c(16.6,13.4,14.6,15.1,12.9,15.2,14.0,16.6,15.4,13.0)
amostra2 = c(15.8,17.9,18.2,20.2,18.1,17.8,18.3,18.6,17.0,18.4)
t.test(amostra1, amostra2, var.equal = TRUE)
prop.test(104,200,0.6,correct=F)
prop.test(c(104,50),c(200,95),correct=F)
Trabalho = matrix(c(1,2,1,0, 3,3,6,1, 10,10,14,9, 6,7,12,11), 4, 4,
dimnames = list(Receita=c("< 15mil", "15-25mil", "25-40mil", "> 40mil"),
Satisfação=c("M.Insatisfeito", "P.Insatisfeito", "Mod.Satisfeito", "M.Satisfeito")))
fisher.test(Trabalho)
shapiro.test(rnorm(10, mean=10, sd=4))
#| echo: false
#| message: false
#### ├ Instalando e carregando bibliotecas externas no R ####
if (!require(nortest))
install.packages('nortest', repos = "http://cran.us.r-project.org")
ad.test(rnorm(10, mean=10, sd=4))
#| echo: false
#| message: false
#### ├ Instalando e carregando bibliotecas externas no R ####
if (!require(nortest))
install.packages('nortest', repos = "http://cran.us.r-project.org")
ad.test(rnorm(10, mean=10, sd=4))
cvm.test(rnorm(10, mean=10, sd=4))
lillie.test(rnorm(10, mean=10, sd=4))
pearson.test(rnorm(10, mean=10, sd=4))
sf.test(rnorm(10, mean=10, sd=4))
Vendas = c(10,12,15,14,13,17,16,13,12,19,14,16,12,
13,10,15,11,16,11,16,12,10,9,12,12,
11,8,13,11,14,18,16,21,23,25,24)
Mes = c("Jan","Jan","Jan","Fev","Fev","Fev","Mar","Mar","Mar","Abr","Abr","Abr",
"Mai","Mai","Mai","Jun","Jun","Jun","Jul","Jul","Jul","Ago","Ago","Ago",
"Set","Set","Set","Out","Out","Out","Nov","Nov","Nov","Dez","Dez","Dez")
dados = data.frame(Vendas=Vendas, Mes=Mes)
bartlett.test(Vendas ~ Mes, data=dados)
TimeA = c(30,25,32,22,19,26)
TimeB = c(18,24,31,28,29,30)
bartlett.test(list(TimeA, TimeB))
levene.test(dados$Vendas, dados$Mes)
#| echo: false
#| message: false
#### ├ Instalando e carregando bibliotecas externas no R ####
if (!require(nortest))
install.packages('nortest', repos = "http://cran.us.r-project.org")
if (!require(car))
install.packages('car', repos = "http://cran.us.r-project.org")
levene.test(dados$Vendas, dados$Mes)
leveneTest(dados$Vendas, dados$Mes)
choose(8,5)
factorial(5)
?citation()
citation(package = "car")
citation(package = "nortest")
citation(package = "stats")
# Calcula a tabela de frequências absolutas e armazena o resultado em 'ni'
ni<-table(tab2_1$grau_instrucao)
#download.file("https://www.ime.usp.br/~pam/dados.RData", "dados.RData")
#load("dados.RData")
tab2_1<-read.table("tabela2_1.csv", dec=",", sep=";",h=T)
names(tab2_1)
summary(tab2_1$salario)
# Calcula a tabela de frequências absolutas e armazena o resultado em 'ni'
ni<-table(tab2_1$grau_instrucao)
fi<-prop.table(ni) # Tabela de frequências relativas (f_i)
p_fi<-100*prop.table(ni) # Porcentagem (100 f_i)
# Adiciona linhas de total
ni<-c(ni,sum(ni))
fi<-c(fi,sum(fi))
p_fi<-c(p_fi,sum(p_fi))
names(ni)[4]<-"Total"
tab2_2<-cbind(ni,fi=round(fi,digits=2),p_fi=round(p_fi,digits=2))
tab2_2
barplot(table(tab2_1$estado_civil), col=c("blue","red"),
ylim=c(0,25),
space=.8, width=c(.2,.2),
main="Número de filhos por estado civil",
xlab="Estado Civil", ylab="Número de Filhos")
text(locator(n=2),c("56%","44%"))
barplot(table(tab2_1$estado_civil), col=c("blue","red"),
ylim=c(0,25),
space=.8, width=c(.2,.2),
main="Número de filhos por estado civil",
xlab="Estado Civil", ylab="Número de Filhos")
text(locator(n=2),c("56%","44%"))
barplot(table(tab2_1$estado_civil), col=c("blue","red"),
ylim=c(0,25),
space=.8, width=c(.2,.2),
main="Número de filhos por estado civil",
xlab="Estado Civil", ylab="Número de Filhos"))
barplot(table(tab2_1$estado_civil), col=c("blue","red"),
ylim=c(0,25),
space=.8, width=c(.2,.2),
main="Número de filhos por estado civil",
xlab="Estado Civil", ylab="Número de Filhos")
barplot(table(tab2_1$estado_civil), col=c("blue","red"),
ylim=c(0,25),
space=.8, width=c(.2,.2),
main="Número de filhos por estado civil",
xlab="Estado Civil", ylab="Número de Filhos")
text(locator(n=2),c("56%","44%"))
barplot(table(tab2_1$estado_civil), col=c("blue","red"),
ylim=c(0,25),
space=.8, width=c(.2,.2),
main="Número de filhos por estado civil",
xlab="Estado Civil", ylab="Número de Filhos")
text(locator(n=2),c("56%","44%"))
barplot(table(tab2_1$estado_civil), col=c("blue","red"),
ylim=c(0,25),
space=.8, width=c(.2,.2),
main="Número de filhos por estado civil",
xlab="Estado Civil", ylab="Número de Filhos")
salario <- c(12, .4, 5, 2, 50, 8, 3, 1, 4, .25)
intervalo <- cut(salario,breaks=c(0,1,5,max(salario)))
intervalo
table(intervalo)
intervalo
levels(intervalo) <-c("pobre","rico"," rolando na grana")
table(intervalo)
Peso= c(60, 75, 55, 68)
Altura = c(65, 61, 70, 65)
Genero = c("Fe","Fe","M","Fe")
estudo = data.frame(Peso,Altura,Genero)
estudo
Peso <-  c(60, 75, 55, 68)
Altura = c(65, 61, 70, 65)
Genero = c("Fe","Fe","M","Fe")
estudo = data.frame(Peso,Altura,Genero)
estudo
estudo = data.frame(P=Peso,H=Altura,G=Genero)
row.names(estudo)<-c("Maria","Alice","André","Julia")
estudo
x=runif(100)
hist(x,probability=TRUE,main="Uniforme[0,1]",
ylab="Densidade",col="yellow")
curve(dunif(x,0,1),add=T)
x=runif(100)
hist(x,probability=TRUE,main="Uniforme[0,1]",
ylab="Densidade",col="yellow")
curve(dunif(x,0,1),add=T)
n=10;p=0.25
x=rbinom(100,n,p)
hist(x,probability=TRUE,ylab="Densidade",
col="pink", main="Binomial",ylim=c(0,0.30))
xvalores=0:n
points(xvalores,dbinom(xvalores,n,p),type="h",
lwd=3)
points(xvalores,dbinom(xvalores,n,p),type="p",
lwd=3)
n=10;p=0.25
x=rbinom(100,n,p)
hist(x,probability=TRUE,ylab="Densidade",
col="pink", main="Binomial",ylim=c(0,0.30))
xvalores=0:n
points(xvalores,dbinom(xvalores,n,p),type="h",
lwd=3)
points(xvalores,dbinom(xvalores,n,p),type="p",
lwd=3)
x=rnorm(100)
hist(x,probability=TRUE,col="lightblue",
main="Normal(0,1)",ylab="Densidade",
ylim=c(0,0.5),xlim=c(-3,3))
curve(dnorm(x),add=T)
x=rnorm(100)
hist(x,probability=TRUE,col="lightblue",
main="Normal(0,1)",ylab="Densidade",
ylim=c(0,0.5),xlim=c(-3,3))
curve(dnorm(x),add=T)
x=rexp(100,1/2500)
hist(x,probability=TRUE,
col="lightgreen",main="Exponencial com média=2500",ylab="Densidade")
curve(dexp(x,1/2500),add=T)
